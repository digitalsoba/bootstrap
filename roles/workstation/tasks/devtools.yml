---
# pyenv
- name: Install pyenv prequisites
  package:
    state: present
    name: "{{ item }}"
  loop: "{{ debian_pyenv_prereqs }}"
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Pop!_OS'
- name: Check if .pyenv exists
  stat:
    path: "/home/{{ user }}/.pyenv"
  register: pyenv_exists
- name: Clone pyenv
  become: yes
  become_user: "{{ user }}"
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "/home/{{ user }}/.pyenv"
    version: master
    depth: "1"
  when: not pyenv_exists.stat.exists
# tfenv
- name: Check if .tfenv exists
  stat:
    path: "/home/{{ user }}/.tfenv"
  register: tfenv_exists
- name: Clone tfenv
  become: yes
  become_user: "{{ user }}"
  git:
    repo: https://github.com/tfutils/tfenv.git
    dest: "/home/{{ user }}/.tfenv"
    version: master
    depth: "1"
  when: not tfenv_exists.stat.exists
- name: Check if /etc/apt/trusted.gpg.d/packages.microsoft.gpg exists
  stat:
    path: "/etc/apt/trusted.gpg.d/packages.microsoft.gpg"
  register: packages_microsoft_gpg_exists
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Pop!_OS'
- name: Add Microsoft GPG key
  ansible.builtin.apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present
  when: not packages_microsoft_gpg_exists.stat.exists
- name: Add Microsoft apt repository
  apt_repository:
    repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
    state: present
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Pop!_OS'
- name: Install code
  apt:
    name: code
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Pop!_OS' and ansible_hostname != 'apollo'